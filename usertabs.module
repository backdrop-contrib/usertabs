<?php

/**
 * @file
 * usertabs.module
 *
 * This module puts the tab for the edition of the user account under the view tab
 *
 * original module and ported to backdrop by Robert Garrigos http://garrigos.cat
 * maintained my matslats http://matslats.net
 */


/**
 * Implements hook_menu_alter().
 */
function usertabs_menu_alter(&$callbacks) {

  //$user_menues = array();
  $toggle_module = FALSE;
  foreach ($callbacks as $key => $value) {
    $paths = explode("/", $key);
    if ($paths[0] == "user" && $value['module'] != 'user') {
      $toggle_module = TRUE;
    }
  }

  if ($toggle_module == FALSE) {
    backdrop_set_message(t('You need to disable User Tabs module in order to see these tabs right'), 'error');
  }

    $callbacks['user/%user/account'] = array(
      'title' => 'Account',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
      'load arguments' => array('%map', '%index'),
    );
    //move the original edit and view items to below this container
    _usertabs_move_item($callbacks, 'user/%user/view', 'user/%user/account/view', MENU_DEFAULT_LOCAL_TASK);
    _usertabs_move_item($callbacks, 'user/%user/edit', 'user/%user/account/edit', MENU_LOCAL_TASK);
    unset($callbacks['user/%user_category/edit/account']);
    $categories = _user_categories();
    if (($categories = _user_categories()) && (count($categories) > 1)) {
      foreach ($categories as $key => $category) {
        // 'account' is already handled by the MENU_DEFAULT_LOCAL_TASK.
        if ($category['name'] != 'account') {
          //it was too friggin complicated to support %user_category
          //see comments in user_category_load
          //all it does is check that the category name is valid
          _usertabs_move_item($callbacks, 'user/%user_category/edit/' . $category['name'], 'user/%user/account/' . $category['name']);
          $callbacks['user/%user/account/' . $category['name']]['tab_parent'] = 'user/%/account';
        }
      }
    }
}

/**
 * Helper function to move menu items
 */
function _usertabs_move_item(&$callbacks, $from, $to, $type = NULL) {
  $callbacks[$to] = $callbacks[$from];
  if ($type) {
    $callbacks[$to]['type'] = $type;
  }
  unset($callbacks[$from]);
}

/**
 * Implements hook_url_outbound().
 */
function usertabs_url_outbound_alter(&$path, $options, $original_path) {
  _update_user_edit_path($path);
}

/**
 * implement hook_drupal_goto().
 */
function usertabs_drupal_goto_alter(&$path, $options, $response_code) {
  _update_user_edit_path($path);
}

/**
 * Implements hook form_FORM_ID_alter
 * change the user edit links on the user management form
 */
function usertabs_preprocess_link(&$link) {
  _update_user_edit_path($link['path']);
}

/**
 * Helper function
 */
function _update_user_edit_path(&$path) {
  if (substr($path, 0, 5) != 'user/') return;
  $args = explode('/', $path);
  if (count($args) > 2 && $args[2] == 'edit') {
    $path = str_replace('edit', 'account/edit', $path);
  }
}

/**
 * Helper function
 */
function _user_categories() {
  $categories = module_invoke_all('user_categories');
  usort($categories, '_usertabs_user_sort');

  return $categories;
}

/**
 * Helper function
 */
function _usertabs_user_sort($a, $b) {
  $a = (array) $a + array('weight' => 0, 'title' => '');
  $b = (array) $b + array('weight' => 0, 'title' => '');
  return $a['weight'] < $b['weight'] ? -1 : ($a['weight'] > $b['weight'] ? 1 : ($a['title'] < $b['title'] ? -1 : 1));
}